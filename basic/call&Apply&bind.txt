Call is a function that helps you change the context of the invoking function. In layperson's terms,
it helps you replace the value of this inside a function with whatever value you want.

let name = {
    firstname:"alka",
    lastname:"rauthan",
    subject: "cs",
    printFullName: function(){
        console.log(this.firstname + "" + this.lastname + "" + this.subject)
    }
}
name.printFullName();

let name2 = {
    firstname: "test",
    lastname: "user"
}
name.printFullName.call(name2)

//function borrowing

let object = {
    firstname: "alka",
    lastname: "rauthan"
}

let printFullName = function(){
    console.log(this.firstname,this.lastname)
}

printFullName.call(object);

let printFullNameWithHometown = function(homwtown){
    console.log(this.firstname,this.lastname, homwtown)
}
printFullName.call(object, "Rishikesh");

// in similiar function if we have to pass multiple values we can use apply
- only difference is the way we pass arguments

printFullName.apply(object,["Mumbai"])

//bind method 
- it will return a new function

const a = printFullName.bind(object,"Rishikesh") //doesnt call the method, but returns a function which can be invoked later
a();
